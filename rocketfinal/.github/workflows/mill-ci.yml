# This file describes the GitHub Actions workflow for continuous integration of rocket-chip.
#
# See
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# for API reference documentation on this file format.

name: Mill Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - chisel3_port

jobs:
  riscv-test:
    name: riscv-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [DefaultConfig, DefaultBufferlessConfig, DefaultRV32Config, TinyConfig, DefaultFP16Config]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Coursier Cache
        uses: coursier/cache-action@v5

      - name: run riscv-tests
        run: |
          nix --experimental-features 'nix-command flakes' develop -c mill -i -j 0 "runnable-test[freechips.rocketchip.system.TestHarness,freechips.rocketchip.system.${{ matrix.config }},_,_].run"

  emulator:
    name: emulator
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [DefaultSmallConfig, DualBankConfig, DualChannelConfig, DualChannelDualBankConfig, RoccExampleConfig, Edge128BitConfig, Edge32BitConfig, QuadChannelBenchmarkConfig, EightChannelConfig, DualCoreConfig, MemPortOnlyConfig, MMIOPortOnlyConfig, CloneTileConfig]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: cachix/install-nix-action@v14.1
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Coursier Cache
        uses: coursier/cache-action@v5

      - name: compile emulator
        run: |
          nix --experimental-features 'nix-command flakes' develop -c mill -i "emulator[freechips.rocketchip.system.TestHarness,freechips.rocketchip.system.${{ matrix.config }}].elf"

  riscv-arch-test:
    name: riscv-arch-test
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        config: ["DefaultRV32Config,32,RV32IMACZicsr_Zifencei", "DefaultConfig,64,RV64IMACZicsr_Zifencei", "BitManipCryptoConfig,64,RV64IZba_Zbb_Zbc_Zbkb_Zbkc_Zbkx_Zbs_Zknd_Zkne_Zknh_Zksed_Zksh", "BitManipCrypto32Config,32,RV32IZba_Zbb_Zbc_Zbkb_Zbkc_Zbkx_Zbs_Zknd_Zkne_Zknh_Zksed_Zksh"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: install nix
        run : |
          # cleanup
          rm -rf /etc/*.backup-before-nix
          rm -rf /etc/profile.d/nix.sh.backup-before-nix
          # from https://github.com/cachix/install-nix-action/issues/122#issuecomment-1062065844
          sh <(curl -L https://nixos.org/nix/install) --daemon --no-channel-add
          mkdir -p ~/.config/nix
          touch ~/.config/nix/nix.conf
          echo "max-jobs = auto" >> ~/.config/nix/nix.conf
          echo "cores = 0" >> ~/.config/nix/nix.conf
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
          echo "/nix/var/nix/profiles/per-user/$USER/profile/bin" >> "$GITHUB_PATH"
          echo "/nix/var/nix/profiles/default/bin" >> "$GITHUB_PATH"
          echo "NIX_PATH=nixpkgs=channel:nixos-unstable" >> "$GITHUB_ENV"

      - name: Coursier Cache
        uses: coursier/cache-action@v6

      - name: run riscv-arch-test
        run: |
          nix develop -c mill -i -j 0 "runnable-arch-test[freechips.rocketchip.system.TestHarness,freechips.rocketchip.system.${{ matrix.config }}].run"
